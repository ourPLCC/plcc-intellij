{
  parserClass="edu.rit.cs.plcc.jetbrainsPlugin.lang.parser_model.PLCCParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="PLCC"
  psiImplClassSuffix="Impl"
  psiPackage="edu.rit.cs.plcc.jetbrainsPlugin.lang.parser_model"
  psiImplPackage="edu.rit.cs.plcc.jetbrainsPlugin.lang.parser_model.impl"

  elementTypeHolderClass="edu.rit.cs.plcc.jetbrainsPlugin.lang.parser_model.PLCCTypes"
  elementTypeClass="edu.rit.cs.plcc.jetbrainsPlugin.lang.parser_model.PLCCElementType"
  tokenTypeClass="edu.rit.cs.plcc.jetbrainsPlugin.lang.parser_model.PLCCTokenType"

  psiImplUtilClass="edu.rit.cs.plcc.jetbrainsPlugin.lang.parser_model.impl.PLCCPsiImplUtil"
}

simpleFile ::= regexDefs (SECTION_SEPERATOR grammarRules)? (SECTION_SEPERATOR javaInclude)?

// token type section
regexDefs ::= EOLS? (regexDef EOLS)+
regexDef ::= SPACES? (tokenDef | skipDef) SPACES?
tokenDef ::= (TOKEN? SPACES+)? IDENTIFIER SPACES+ REGEX
skipDef ::= SKIP SPACES+ IDENTIFIER SPACES+ REGEX
//

// grammar rules section
grammarRules ::= grammarRule+
grammarRule ::= singleMatch | multiMatch
singleMatch ::= lhs SINGLE_MATCH_RULE rhs
multiMatch ::= lhs ANY_MATCH_RULE rhs ANY_MATCH_SEPERATOR?
lhs ::= GRAMMAR_NAME | GRAMMAR_NAME_ABSTRACT
rhs ::= (IDENTIFIER | GRAMMAR_NAME)*
//

javaInclude ::= COMMENT*
